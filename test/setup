#!/bin/bash -x
# if in jenkins, make the venv from the workspace and build ID
# to allow concurrent runs.

# if in jenkins, make the venv from the workspace and build ID
# to allow concurrent runs.
if [[ "$CI" == "jenkins" ]]; then
    VENV=$WORKSPACE/venv
    USE_PRIVATE_IPS="true"
    virtualenv $VENV
    source $VENV/bin/activate
    pip install -U pip
    pip install -U -r requirements.txt
fi
source $(dirname $0)/common

if $RUN_CLEANUP; then
  echo "deleting heat stack to destroy resources including VMs: ${VMS}"
  ${ROOT}/test/cleanup
fi

create_heat_template
UNDERCLOUD_CIDR="$(python -c 'import shade; cloud = shade.openstack_cloud(); print cloud.search_subnets("internal")[0]["cidr"]')"

prepare_vars ${UNDERCLOUD_CIDR}
pre_deploy

if [[ ${TEST_ENV} == "ci-ceph_swift" || ${TEST_ENV} == "ci-ceph-swift-rhel" ]]; then
    create_ring_definition
fi

#workaround security group issue for defect 344951 and security rules can take effect after retouch securitygroup

secgroup=$(openstack security group list|grep ${SECURITYGROUP_NAME})
secgroup_id=$(echo ${secgroup}|awk '{print $2}')

openstack security group rule create  --protocol tcp --ingress --dst-port 23:23 --remote-ip 192.168.1.1/32 ${secgroup_id}
secgroup_rule_id=$(openstack security group rule list|grep 192.168.1.1/32|awk '{print $2}')
openstack security group rule delete ${secgroup_rule_id}

ring_bell
echo "vms are up: ${VMS} !!"
